{
	"info": {
		"_postman_id": "0394257d-2ffe-49d0-bcb3-544186683e66",
		"name": "Pokedex",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38109047"
	},
	"item": [
		{
			"name": "Pokemon",
			"item": [
				{
					"name": "GET POKES",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/v1/pokemon?select=name,type",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"v1",
								"pokemon"
							],
							"query": [
								{
									"key": "select",
									"value": "name,type"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD POKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 (Created)\", function (){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has created resource ID\", function () {",
									"    const responseBody = pm.response.json();",
									"    pm.expect(responseBody.data).to.have.property(\"_id\").that.is.not.null;",
									"    pm.expect(responseBody.data._id).to.have.lengthOf(24);",
									"",
									"    pm.collectionVariables.set(\"pokeId\", responseBody.data._id);",
									"});",
									"",
									"pm.test(\"The response has all properties\", () => {",
									"    const responseBody = pm.response.json();",
									"    const { data } = responseBody;",
									"    pm.expect(data.name).to.be.a('string');",
									"    pm.expect(data.name).to.eql(\"Onix\");",
									"    pm.expect(data.dexNumber).to.eql(95);",
									"    pm.expect(data.dexNumber).to.be.a('number');",
									"",
									"});",
									"",
									"//pm.test(\"Each leader in the response has a non-empty name property\", function () {",
									"  //  const responseBody = pm.response.json();",
									"    //const leaders = responseBody.data.leaders;",
									"",
									"    //leaders.forEach((leader) => {",
									"      //  pm.expect(leader.name).to.be.a('string').and.to.not.be.empty;",
									"   // });",
									"//});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"poke\":{\n    \"name\" : \"Smeargle\",\n    \"type\" : \"Normal\",\n    \"dexNumber\" : \"235\",\n    \"description\": \"The Art pokemon\",\n    \"leader\": \"67d9dae5ef305d9535c73021\"\n}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/v1/pokemon",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"v1",
								"pokemon"
							]
						}
					},
					"response": []
				},
				{
					"name": "UPDATE DEX",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"dexNumber\" : 234 }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/v1/pokemon/67d9a59c37b3b018c14e88f8\n",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"v1",
								"pokemon",
								"67d9a59c37b3b018c14e88f8\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE POKE",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/v1/pokemon/67d9a59c37b3b018c14e88f8",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"v1",
								"pokemon",
								"67d9a59c37b3b018c14e88f8"
							]
						}
					},
					"response": []
				},
				{
					"name": "FIND POKE",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/v1/pokemon/67903f6d1caccb05321797e2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"v1",
								"pokemon",
								"67903f6d1caccb05321797e2"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET POKES with Range Filters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response should be okay to process and have data property', function() {",
									"    pm.response.to.not.be.error;",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
									"    pm.response.to.have.jsonBody('data');",
									"    pm.response.to.not.have.jsonBody('error');",
									"    pm.expect(pm.response.json()).to.have.property('data');",
									"});",
									"",
									"pm.test('Status code is 200', function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"It returns based on filter\", function(){",
									"    const [pokeObject] = pm.response.json().data;",
									"    pm.expect(pokeObject).to.have.property(\"_id\");",
									"    pm.expect(pokeObject).to.have.property(\"name\");",
									"    pm.expect(pokeObject).to.have.property(\"type\");",
									"    pm.expect(pokeObject).to.have.property(\"dexNumber\");",
									"    ",
									"    pm.expect(pokeObject.name).to.equal(\"lapris\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/v1/pokemon?dexNumber[gte]=100&dexNumber[lt]=150",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"v1",
								"pokemon"
							],
							"query": [
								{
									"key": "dexNumber[gte]",
									"value": "100"
								},
								{
									"key": "dexNumber[lt]",
									"value": "150"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Leader",
			"item": [
				{
					"name": "GET LEADERS",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/v1/leaders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"v1",
								"leaders"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD LEADER",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"leader\":{\n    \"name\" : \"Roark\",\n    \"type\" : \"Rock\",\n    \"gymNumber\" : \"1\",\n    \"description\": \"The First gym leader in the Sinnoh region\"\n\n\n}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/v1/leaders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"v1",
								"leaders"
							]
						}
					},
					"response": []
				},
				{
					"name": "UPDATE LEADER",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\" : \"Sarah\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/v1/leaders/67db0c7dff20b47c9ec1595a",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"v1",
								"leaders",
								"67db0c7dff20b47c9ec1595a"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE LEADER",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\" : \"BROCK\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/v1/leaders/67db0c7dff20b47c9ec1595a",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"v1",
								"leaders",
								"67db0c7dff20b47c9ec1595a"
							]
						}
					},
					"response": []
				},
				{
					"name": "FIND LEADER",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\" : \"BROCK\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/v1/leaders/67db0c7dff20b47c9ec1595a",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"v1",
								"leaders",
								"67db0c7dff20b47c9ec1595a"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "pokeId",
			"value": ""
		}
	]
}